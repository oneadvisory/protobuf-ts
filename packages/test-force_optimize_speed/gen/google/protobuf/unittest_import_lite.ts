// @generated by protobuf-ts 3.0.0 with parameter force_optimize_speed
// @generated from protobuf file "google/protobuf/unittest_import_lite.proto" (package "protobuf_unittest_import", syntax proto2)
// tslint:disable
//
// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//
// Author: kenton@google.com (Kenton Varda)
//
// This is like unittest_import.proto but with optimize_for = LITE_RUNTIME.
//
import type { BinaryWriteOptions } from "@oneadvisory/protobuf-ts-runtime";
import type { IBinaryWriter } from "@oneadvisory/protobuf-ts-runtime";
import { WireType } from "@oneadvisory/protobuf-ts-runtime";
import type { BinaryReadOptions } from "@oneadvisory/protobuf-ts-runtime";
import type { IBinaryReader } from "@oneadvisory/protobuf-ts-runtime";
import { UnknownFieldHandler } from "@oneadvisory/protobuf-ts-runtime";
import type { PartialMessage } from "@oneadvisory/protobuf-ts-runtime";
import { reflectionMergePartial } from "@oneadvisory/protobuf-ts-runtime";
import { MessageType } from "@oneadvisory/protobuf-ts-runtime";
/**
 * @generated from protobuf message protobuf_unittest_import.ImportMessageLite
 */
export interface ImportMessageLite {
    /**
     * @generated from protobuf field: optional int32 d = 1;
     */
    d?: number;
}
/**
 * @generated from protobuf enum protobuf_unittest_import.ImportEnumLite:
 *
 * enum ImportEnumLite {
 *  UNSPECIFIED$ = 0;
 *  IMPORT_LITE_FOO = 7;
 *  IMPORT_LITE_BAR = 8;
 *  IMPORT_LITE_BAZ = 9;
 * }
 */
export type ImportEnumLite = "UNSPECIFIED$" | "IMPORT_LITE_FOO" | "IMPORT_LITE_BAR" | "IMPORT_LITE_BAZ";
export const ImportEnumLite = {
    /**
     * @generated from protobuf enum value: UNSPECIFIED$ = 0;
     */ UNSPECIFIED$: "UNSPECIFIED$",
    /**
     * @generated from protobuf enum value: IMPORT_LITE_FOO = 7;
     */ IMPORT_LITE_FOO: "IMPORT_LITE_FOO",
    /**
     * @generated from protobuf enum value: IMPORT_LITE_BAR = 8;
     */ IMPORT_LITE_BAR: "IMPORT_LITE_BAR",
    /**
     * @generated from protobuf enum value: IMPORT_LITE_BAZ = 9;
     */ IMPORT_LITE_BAZ: "IMPORT_LITE_BAZ"
} as const;
export const ImportEnumLite$stringToNumber = {
    UNSPECIFIED$: 0,
    IMPORT_LITE_FOO: 7,
    IMPORT_LITE_BAR: 8,
    IMPORT_LITE_BAZ: 9
} as const;
export const ImportEnumLite$numberToString = {
    0: "UNSPECIFIED$",
    7: "IMPORT_LITE_FOO",
    8: "IMPORT_LITE_BAR",
    9: "IMPORT_LITE_BAZ"
} as const;
// @generated message type with reflection information, may provide speed optimized methods
class ImportMessageLite$Type extends MessageType<ImportMessageLite> {
    constructor() {
        super("protobuf_unittest_import.ImportMessageLite", [
            { no: 1, name: "d", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ImportMessageLite>): ImportMessageLite {
        const message = globalThis.Object.create(this.messagePrototype!);
        if (value !== undefined)
            reflectionMergePartial<ImportMessageLite>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ImportMessageLite): ImportMessageLite {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 d */ 1:
                    message.d = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ImportMessageLite, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 d = 1; */
        if (message.d !== undefined)
            writer.tag(1, WireType.Varint).int32(message.d);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message protobuf_unittest_import.ImportMessageLite
 */
export const ImportMessageLite = new ImportMessageLite$Type();
